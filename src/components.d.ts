/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ColorScheme } from "./utils/color-scheme.enum";
import { MouseHandler } from "./components/button-component/button-component";
export { ColorScheme } from "./utils/color-scheme.enum";
export { MouseHandler } from "./components/button-component/button-component";
export namespace Components {
    interface IdunButton {
        "colorScheme": ColorScheme;
        "label": string;
        "registerClickHandler": (funcId: string, func: MouseHandler) => Promise<void>;
        "shadowOnHover": boolean;
        "unregisterClickHandler": (funcId: string) => Promise<void>;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
export interface IdunButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLIdunButtonElement;
}
declare global {
    interface HTMLIdunButtonElement extends Components.IdunButton, HTMLStencilElement {
    }
    var HTMLIdunButtonElement: {
        prototype: HTMLIdunButtonElement;
        new (): HTMLIdunButtonElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "idun-button": HTMLIdunButtonElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface IdunButton {
        "colorScheme"?: ColorScheme;
        "label"?: string;
        "onInitialized"?: (event: IdunButtonCustomEvent<object>) => void;
        "shadowOnHover"?: boolean;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "idun-button": IdunButton;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "idun-button": LocalJSX.IdunButton & JSXBase.HTMLAttributes<HTMLIdunButtonElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
